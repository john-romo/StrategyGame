#ifndef _COMS_H
#define _COMS_H

#include "default.h"

#define PORT 49999
#define TICK_PORT 48888
#define ADDRESS "127.0.0.1"
#define BUFF_SIZE PATH_MAX + 1 


#define ERROR_CODE 'e'
#define ACCEPT_CODE 'a'

enum MSG_TYPE
{
	MSG_TYPE_ERROR,
	MSG_TYPE_STARTGAME,
	MSG_TYPE_INITIAL_PLACEMENT,
	MSG_TYPE_RESPONSE,
	MSG_TYPE_CANCEL,
	MSG_TYPE_UPDATE,
	MSG_TYPE_PLACE,
	MSG_TYPE_MOVE,
	NUM_MSG_TYPES
};


enum S_HEADER
{
	S_SIZE,
	S_TYPE,
	S_HEADER_SIZE
};


enum C_HEADER
{
	C_SIZE,
	C_TYPE,
	C_COLOR,
	C_HEADER_SIZE
};


enum S_STARTGAME{
	S_CLIENT_COLOR = S_HEADER_SIZE,
	S_STARTGAME_SIZE
};

enum C_INITIAL_PLACEMENT
{
	C_INITIAL_PLACEMENT_BODY = C_HEADER_SIZE,
	C_IPP_TYPE = 0,
	C_IPP_X,
	C_IPP_Y,
	C_IPP_SIZE,
	C_INITIAL_PLACEMENT_SIZE = C_HEADER_SIZE+(NUM_START_PIECES*C_IPP_SIZE)
};

enum S_RESPONSE 
{
	S_ERROR_TYPE = S_HEADER_SIZE,
	S_RESPONSE_SIZE
};


enum C_PLACE
{
	C_PLACE_TYPE = C_HEADER_SIZE,
	C_PLACE_COLOR,
	C_PLACE_X,
	C_PLACE_Y,
	C_PLACE_SIZE
};


enum C_MOVE
{
	C_MOVE_X = C_HEADER_SIZE,
	C_MOVE_Y,
	C_MOVE_H,
	C_MOVE_SIZE
};

enum ERROR_TYPES{
	NO_ERROR
};




#endif
